server {
    listen   80; ## listen for ipv4; this line is default and implied

    root /var/www/html/public;
    index index.php index.html index.htm;

    server_name localhost dev.eshopuet.tk www.dev.eshopuet.tk;


    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml application/json text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
       try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

        location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
                expires           5d;
        }

    location ~ /\. {
            log_not_found off;
            deny all;
    }

}

# server {
#     listen 443 ssl;
#     server_name localhost dev.eshopuet.tk;
    
#     ssl_certificate ./etc/nginx/ssl/eshopuet_ssl_cert.crt;
#     ssl_certificate_key ./etc/nginx/ssl/eshopuet_ssl_private_key.key;
    
#     access_log /var/log/nginx/data-access.log combined;

#     location / {
#        proxy_pass http://shiny:3838/;
#        proxy_set_header X-Real-IP  $remote_addr;
#        proxy_set_header X-Forwarded-For $remote_addr;
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_redirect http://shiny:3838/ $scheme://$http_host/;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection $connection_upgrade;
#        proxy_read_timeout 20d;
#        proxy_buffering off;
#     }
# }

# server {
#     listen 80 default_server;
#     listen [::]:80 default_server;
#     root /var/www/html;
#     server_name  localhost dev.eshopuet.tk www.dev.eshopuet.tk;

#     listen 443 ssl; # managed by Certbot

#     # RSA certificate
#     ssl_certificate /etc/nginx/ssl/eshopuet_ssl_cert.pem; # managed by Certbot
#     ssl_certificate_key /etc/nginx/ssl/eshopuet_ssl_privkey.pem; # managed by Certbot

#     include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

#     # Redirect non-https traffic to https
#     if ($scheme != "https") {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot
# }